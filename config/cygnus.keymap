#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "balanced";
    hold-trigger-on-release;
    tapping-term-ms = <400>;
    quick-tap-ms = <250>;
    require-prior-idle-ms = <200>;
};

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47>;
            tapping-term-ms = <180>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
    };

    macros {
        phimmeomeo: phimmeomeo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp H &kp I &kp M &kp M &kp E &kp O &kp M &kp E &kp O &kp DOT &kp C &kp O &kp M>;
            label = "PHIMMEOMEO";
            wait-ms = <5>;
            tap-ms = <10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  |  ?   |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp N1  &kp N2  &kp N3         &kp N4         &kp N5       &kp N6        &kp N7                &kp N8                       &kp N9            &kp N0            &kp MINUS
&kp TAB     &kp Q   &kp W   &kp E          &kp R          &kp T        &kp Y         &kp U                 &kp I                        &kp O             &kp P             &kp LEFT_BRACKET
&mo 1       &kp A   &kp S   &kp D          &kp F          &kp G        &kp H         &hmr RIGHT_SHIFT J    &hmr RIGHT_GUI K             &hmr RIGHT_ALT L  &kp SEMI          &kp SQT
&kp LSHFT   &kp Z   &kp X   &kp C          &kp V          &kp B        &kp N         &hmr RIGHT_CONTROL M  &kp COMMA                    &kp DOT           &kp SINGLE_QUOTE  &kp EQUAL
                            &mt LCTRL DEL  &kp BACKSPACE  &kp ENTER    &kp KP_ENTER  &kp SPACE             &mt RIGHT_ALT RIGHT_BRACKET
            >;
        };

        layer_1 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | BKSP |
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F1     &kp F2     &kp F3  &kp F4  &kp F5         &kp F6     &kp F7          &kp F8          &kp F9     &kp F10  &kp F11
&trans  &trans     &trans     &trans  &trans  &kp F12        &trans     &trans          &kp UP_ARROW    &trans     &trans   &kp F12
&trans  &trans     &trans     &trans  &trans  &trans         &trans     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans   &trans
&trans  &kp GRAVE  &kp EQUAL  &trans  &trans  &trans         &kp SLASH  &trans          &trans          &trans     &trans   &kp BACKSLASH
                              &trans  &trans  &phimmeomeo    &trans     &trans          &trans
            >;
        };
    };
};
